{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/WebstormProjects/stock_exchange/frontend/src/exchangeSimulator/ExchangeSimulator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { Line } from 'react-chartjs-2'; // Импорт Line Chart\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './ExchangeSimulator.css';\n\n// Регистрируем модули Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst socket = io('http://localhost:3001'); // URL сервера\n\nconst ExchangeSimulator = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [speed, setSpeed] = useState(1);\n  const [isTrading, setIsTrading] = useState(false);\n  const [chartData, setChartData] = useState({});\n  const [chartLabels, setChartLabels] = useState([]);\n  useEffect(() => {\n    // Получение данных с сервера\n    socket.on('stockUpdate', updatedStocks => {\n      setStocks(updatedStocks);\n\n      // Обновляем график\n      updateChart(updatedStocks);\n    });\n    socket.emit('getStocks', {}, initialStocks => {\n      setStocks(initialStocks);\n\n      // Инициализация графика\n      initializeChart(initialStocks);\n    });\n    return () => socket.disconnect();\n  }, []);\n  const startTrading = () => {\n    setIsTrading(true);\n    socket.emit('startTrading', {\n      speed\n    });\n  };\n  const stopTrading = () => {\n    setIsTrading(false);\n    socket.emit('stopTrading');\n  };\n  const initializeChart = stocks => {\n    // Создаем начальные данные для графика\n    const labels = ['Начало'];\n    const datasets = stocks.map(stock => ({\n      label: stock.ticker,\n      data: [stock.price],\n      borderColor: getRandomColor(),\n      backgroundColor: 'rgba(0,0,0,0)'\n    }));\n    setChartLabels(labels);\n    setChartData({\n      labels,\n      datasets\n    });\n  };\n  const updateChart = updatedStocks => {\n    setChartLabels(prevLabels => {\n      const newLabels = [...prevLabels, `T+${prevLabels.length}`];\n      return newLabels;\n    });\n    setChartData(prevData => {\n      const prevDatasets = prevData.datasets || []; // Проверка существования\n\n      const updatedDatasets = prevDatasets.map(dataset => {\n        const stock = updatedStocks.find(s => s.ticker === dataset.label);\n        return {\n          ...dataset,\n          data: [...dataset.data, stock ? stock.price : null] // Защита от undefined\n        };\n      });\n      return {\n        ...prevData,\n        datasets: updatedDatasets\n      };\n    });\n  };\n  const getRandomColor = () => {\n    // Генерация случайного цвета для линий графика\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"\\u0411\\u0438\\u0440\\u0436\\u0435\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0440\\u0433\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"speed\",\n        children: \"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F (\\u0441\\u0435\\u043A):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"speed\",\n        type: \"number\",\n        min: \"1\",\n        value: speed,\n        onChange: e => setSpeed(Number(e.target.value)),\n        disabled: isTrading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTrading,\n        disabled: isTrading,\n        children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u043E\\u0440\\u0433\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTrading,\n        disabled: !isTrading,\n        children: \"\\u041E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0442\\u043E\\u0440\\u0433\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-prices\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0435 \\u0446\\u0435\\u043D\\u044B \\u0430\\u043A\\u0446\\u0438\\u0439:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"stockTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0422\\u0438\\u043A\\u0435\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0426\\u0435\\u043D\\u0430 ($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: stocks.map(stock => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.companyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.ticker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.price.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, stock.ticker, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F \\u0446\\u0435\\u043D:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: 'Изменение цен акций'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(ExchangeSimulator, \"Q4pWhvzhRRQ516Zi3zeP48rMswM=\");\n_c = ExchangeSimulator;\nexport default ExchangeSimulator;\nvar _c;\n$RefreshReg$(_c, \"ExchangeSimulator\");","map":{"version":3,"names":["React","useState","useEffect","io","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","socket","ExchangeSimulator","_s","stocks","setStocks","speed","setSpeed","isTrading","setIsTrading","chartData","setChartData","chartLabels","setChartLabels","on","updatedStocks","updateChart","emit","initialStocks","initializeChart","disconnect","startTrading","stopTrading","labels","datasets","map","stock","label","ticker","data","price","borderColor","getRandomColor","backgroundColor","prevLabels","newLabels","length","prevData","prevDatasets","updatedDatasets","dataset","find","s","letters","color","i","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","min","value","onChange","e","Number","target","disabled","onClick","companyName","toFixed","options","responsive","plugins","legend","position","title","display","text","_c","$RefreshReg$"],"sources":["/home/vladislav/WebstormProjects/stock_exchange/frontend/src/exchangeSimulator/ExchangeSimulator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { Line } from 'react-chartjs-2'; // Импорт Line Chart\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport './ExchangeSimulator.css';\n\n// Регистрируем модули Chart.js\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst socket = io('http://localhost:3001'); // URL сервера\n\nconst ExchangeSimulator = () => {\n    const [stocks, setStocks] = useState([]);\n    const [speed, setSpeed] = useState(1);\n    const [isTrading, setIsTrading] = useState(false);\n    const [chartData, setChartData] = useState({});\n    const [chartLabels, setChartLabels] = useState([]);\n\n    useEffect(() => {\n        // Получение данных с сервера\n        socket.on('stockUpdate', (updatedStocks) => {\n            setStocks(updatedStocks);\n\n            // Обновляем график\n            updateChart(updatedStocks);\n        });\n\n        socket.emit('getStocks', {}, (initialStocks) => {\n            setStocks(initialStocks);\n\n            // Инициализация графика\n            initializeChart(initialStocks);\n        });\n\n        return () => socket.disconnect();\n    }, []);\n\n    const startTrading = () => {\n        setIsTrading(true);\n        socket.emit('startTrading', { speed });\n    };\n\n    const stopTrading = () => {\n        setIsTrading(false);\n        socket.emit('stopTrading');\n    };\n\n    const initializeChart = (stocks) => {\n        // Создаем начальные данные для графика\n        const labels = ['Начало'];\n        const datasets = stocks.map((stock) => ({\n            label: stock.ticker,\n            data: [stock.price],\n            borderColor: getRandomColor(),\n            backgroundColor: 'rgba(0,0,0,0)',\n        }));\n\n        setChartLabels(labels);\n        setChartData({ labels, datasets });\n    };\n\n    const updateChart = (updatedStocks) => {\n        setChartLabels((prevLabels) => {\n            const newLabels = [...prevLabels, `T+${prevLabels.length}`];\n            return newLabels;\n        });\n\n        setChartData((prevData) => {\n            const prevDatasets = prevData.datasets || []; // Проверка существования\n\n            const updatedDatasets = prevDatasets.map((dataset) => {\n                const stock = updatedStocks.find((s) => s.ticker === dataset.label);\n                return {\n                    ...dataset,\n                    data: [...dataset.data, stock ? stock.price : null], // Защита от undefined\n                };\n            });\n\n            return {\n                ...prevData,\n                datasets: updatedDatasets,\n            };\n        });\n    };\n\n\n    const getRandomColor = () => {\n        // Генерация случайного цвета для линий графика\n        const letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    };\n\n    return (\n        <div className=\"content\">\n            <header className=\"header\">Биржевые торги</header>\n\n            <div className=\"settings\">\n                <label htmlFor=\"speed\">Скорость обновления (сек):</label>\n                <input\n                    id=\"speed\"\n                    type=\"number\"\n                    min=\"1\"\n                    value={speed}\n                    onChange={(e) => setSpeed(Number(e.target.value))}\n                    disabled={isTrading}\n                />\n\n                <button onClick={startTrading} disabled={isTrading}>\n                    Начать торги\n                </button>\n                <button onClick={stopTrading} disabled={!isTrading}>\n                    Остановить торги\n                </button>\n            </div>\n\n            <div className=\"stock-prices\">\n                <h3>Текущие цены акций:</h3>\n                <table className=\"stockTable\">\n                    <thead>\n                    <tr>\n                        <th>Компания</th>\n                        <th>Тикер</th>\n                        <th>Цена ($)</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {stocks.map((stock) => (\n                        <tr key={stock.ticker}>\n                            <td>{stock.companyName}</td>\n                            <td>{stock.ticker}</td>\n                            <td>{stock.price.toFixed(2)}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n\n            <div className=\"chart-container\">\n                <h3>График изменения цен:</h3>\n                <Line\n                    data={chartData}\n                    options={{\n                        responsive: true,\n                        plugins: {\n                            legend: { position: 'top' },\n                            title: { display: true, text: 'Изменение цен акций' },\n                        },\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ExchangeSimulator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}