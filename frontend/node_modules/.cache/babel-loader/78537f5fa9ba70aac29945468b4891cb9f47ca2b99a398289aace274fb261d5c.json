{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/WebstormProjects/stock_exchange/frontend/src/exchangeSimulator/ExchangeSimulator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExchangeSimulator = () => {\n  _s();\n  // Состояния для настроек\n  const [startDate, setStartDate] = useState('2022-11-01');\n  const [speed, setSpeed] = useState(1); // скорость в секундах\n  const [isTrading, setIsTrading] = useState(false);\n  const [currentDate, setCurrentDate] = useState(startDate);\n  const [stocks, setStocks] = useState([{\n    ticker: 'AAPL',\n    companyName: 'Apple, Inc.',\n    price: 151.89\n  }, {\n    ticker: 'SBUX',\n    companyName: 'Starbucks, Inc.',\n    price: 112.47\n  }\n  // Дополнительные акции\n  ]);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Подключаемся к WebSocket серверу\n    const newSocket = io('http://localhost:3001');\n    setSocket(newSocket);\n\n    // Очистка при размонтировании компонента\n    return () => newSocket.close();\n  }, []);\n\n  // Функция для начала торгов\n  const startTrading = () => {\n    setIsTrading(true);\n    simulateTrading();\n  };\n\n  // Функция для имитации торгов\n  const simulateTrading = () => {\n    if (!isTrading) return;\n\n    // Эмуляция смены даты\n    setInterval(() => {\n      const nextDate = new Date(currentDate);\n      nextDate.setDate(nextDate.getDate() + 1);\n      setCurrentDate(nextDate.toISOString().split('T')[0]);\n\n      // Обновление котировок акций (имитация изменения)\n      const updatedStocks = stocks.map(stock => ({\n        ...stock,\n        price: stock.price + (Math.random() - 0.5) * 5 // случайное изменение цены\n      }));\n      setStocks(updatedStocks);\n\n      // Отправка обновленных данных на сервер через WebSocket\n      socket.emit('updateStockPrices', updatedStocks);\n    }, speed * 1000); // скорость в миллисекундах\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0411\\u0438\\u0440\\u0436\\u0435\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0440\\u0433\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0441\\u043C\\u0435\\u043D\\u044B \\u0434\\u0430\\u0442 (\\u0441\\u0435\\u043A):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: speed,\n        onChange: e => setSpeed(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTrading,\n      disabled: isTrading,\n      children: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432: \", currentDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0435 \\u0446\\u0435\\u043D\\u044B \\u0430\\u043A\\u0446\\u0438\\u0439:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: stocks.map(stock => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [stock.companyName, \" (\", stock.ticker, \"): $\", stock.price.toFixed(2)]\n        }, stock.ticker, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(ExchangeSimulator, \"+gv4QvRnkUzL9kn73q67LfRsGaM=\");\n_c = ExchangeSimulator;\nexport default ExchangeSimulator;\nvar _c;\n$RefreshReg$(_c, \"ExchangeSimulator\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","ExchangeSimulator","_s","startDate","setStartDate","speed","setSpeed","isTrading","setIsTrading","currentDate","setCurrentDate","stocks","setStocks","ticker","companyName","price","socket","setSocket","newSocket","close","startTrading","simulateTrading","setInterval","nextDate","Date","setDate","getDate","toISOString","split","updatedStocks","map","stock","Math","random","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","Number","onClick","disabled","toFixed","_c","$RefreshReg$"],"sources":["/home/vladislav/WebstormProjects/stock_exchange/frontend/src/exchangeSimulator/ExchangeSimulator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst ExchangeSimulator = () => {\n    // Состояния для настроек\n    const [startDate, setStartDate] = useState('2022-11-01');\n    const [speed, setSpeed] = useState(1); // скорость в секундах\n    const [isTrading, setIsTrading] = useState(false);\n    const [currentDate, setCurrentDate] = useState(startDate);\n    const [stocks, setStocks] = useState([\n        { ticker: 'AAPL', companyName: 'Apple, Inc.', price: 151.89 },\n        { ticker: 'SBUX', companyName: 'Starbucks, Inc.', price: 112.47 },\n        // Дополнительные акции\n    ]);\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        // Подключаемся к WebSocket серверу\n        const newSocket = io('http://localhost:3001');\n        setSocket(newSocket);\n\n        // Очистка при размонтировании компонента\n        return () => newSocket.close();\n    }, []);\n\n    // Функция для начала торгов\n    const startTrading = () => {\n        setIsTrading(true);\n        simulateTrading();\n    };\n\n    // Функция для имитации торгов\n    const simulateTrading = () => {\n        if (!isTrading) return;\n\n        // Эмуляция смены даты\n        setInterval(() => {\n            const nextDate = new Date(currentDate);\n            nextDate.setDate(nextDate.getDate() + 1);\n            setCurrentDate(nextDate.toISOString().split('T')[0]);\n\n            // Обновление котировок акций (имитация изменения)\n            const updatedStocks = stocks.map(stock => ({\n                ...stock,\n                price: stock.price + (Math.random() - 0.5) * 5, // случайное изменение цены\n            }));\n            setStocks(updatedStocks);\n\n            // Отправка обновленных данных на сервер через WebSocket\n            socket.emit('updateStockPrices', updatedStocks);\n        }, speed * 1000); // скорость в миллисекундах\n    };\n\n    return (\n        <div>\n            <h2>Биржевые торги</h2>\n\n            <div>\n                <label>Дата начала торгов:</label>\n                <input\n                    type=\"date\"\n                    value={startDate}\n                    onChange={(e) => setStartDate(e.target.value)}\n                />\n            </div>\n\n            <div>\n                <label>Скорость смены дат (сек):</label>\n                <input\n                    type=\"number\"\n                    value={speed}\n                    onChange={(e) => setSpeed(Number(e.target.value))}\n                />\n            </div>\n\n            <button onClick={startTrading} disabled={isTrading}>\n                Начало торгов\n            </button>\n\n            <div>\n                <h3>Текущая дата торгов: {currentDate}</h3>\n            </div>\n\n            <div>\n                <h3>Текущие цены акций:</h3>\n                <ul>\n                    {stocks.map((stock) => (\n                        <li key={stock.ticker}>\n                            {stock.companyName} ({stock.ticker}): ${stock.price.toFixed(2)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default ExchangeSimulator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}