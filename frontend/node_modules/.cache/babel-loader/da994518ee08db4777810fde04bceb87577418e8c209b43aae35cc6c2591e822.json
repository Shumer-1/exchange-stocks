{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/WebstormProjects/stock_exchange/frontend/src/exchangeSimulator/ExchangeSimulator.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport io from 'socket.io-client';\nimport { setStocks, setTradingStatus, setSpeed } from './stockSlice';\nimport { Line } from 'react-chartjs-2';\nimport Modal from 'react-modal';\nimport './ExchangeSimulator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001', {\n  transports: ['websocket']\n});\nModal.setAppElement('#root');\nconst ExchangeSimulator = () => {\n  _s();\n  const {\n    stocks,\n    isTrading,\n    speed\n  } = useSelector(state => state.stocks);\n  const dispatch = useDispatch();\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [priceHistory, setPriceHistory] = useState({});\n  const [dateHistory, setDateHistory] = useState({}); // Хранение дат для акций\n\n  useEffect(() => {\n    socket.on('stockUpdate', updatedStocks => {\n      dispatch(setStocks(updatedStocks));\n\n      // Обновляем историю цен и дат для каждой акции\n      setPriceHistory(prevHistory => {\n        const updatedPriceHistory = {\n          ...prevHistory\n        };\n        const updatedDateHistory = {\n          ...dateHistory\n        }; // Копируем существующую историю дат\n\n        updatedStocks.forEach(stock => {\n          if (!updatedPriceHistory[stock.ticker]) {\n            updatedPriceHistory[stock.ticker] = []; // Инициализируем массив цен, если отсутствует\n          }\n          if (!updatedDateHistory[stock.ticker]) {\n            updatedDateHistory[stock.ticker] = []; // Инициализируем массив дат, если отсутствует\n          }\n\n          // Добавляем новое значение цены\n          updatedPriceHistory[stock.ticker].push(stock.price);\n\n          // Добавляем дату (следующий день)\n          const lastDate = updatedDateHistory[stock.ticker].length > 0 ? new Date(updatedDateHistory[stock.ticker].slice(-1)[0]) : new Date(); // Начинаем с сегодняшней даты\n\n          const nextDate = new Date(lastDate);\n          nextDate.setDate(nextDate.getDate() + 1); // Добавляем 1 день\n\n          updatedDateHistory[stock.ticker].push(nextDate.toISOString().split('T')[0]);\n        });\n        setDateHistory(updatedDateHistory); // Обновляем историю дат\n        return updatedPriceHistory; // Возвращаем обновленную историю цен\n      });\n    });\n    socket.emit('loadPage');\n    socket.emit('getStocks');\n    return () => {\n      socket.off('stockUpdate');\n    };\n  }, [dispatch, dateHistory]);\n  const startTrading = () => {\n    dispatch(setTradingStatus(true));\n    socket.emit('startTrading', {\n      speed\n    });\n  };\n  const stopTrading = () => {\n    dispatch(setTradingStatus(false));\n    socket.emit('stopTrading');\n    setPriceHistory({});\n    setDateHistory({}); // Очистка дат при остановке торгов\n  };\n  const handleSpeedChange = e => {\n    dispatch(setSpeed(Number(e.target.value)));\n  };\n  const handleShowChart = stock => {\n    setSelectedStock(stock);\n  };\n  const handleCloseChart = () => {\n    setSelectedStock(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"\\u0411\\u0438\\u0440\\u0436\\u0435\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0440\\u0433\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"speed\",\n        children: \"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F (\\u0441\\u0435\\u043A):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"speed\",\n        type: \"number\",\n        min: \"1\",\n        value: speed,\n        onChange: handleSpeedChange,\n        disabled: isTrading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTrading,\n        disabled: isTrading,\n        children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u043E\\u0440\\u0433\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTrading,\n        disabled: !isTrading,\n        children: \"\\u041E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0442\\u043E\\u0440\\u0433\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-prices\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0435 \\u0446\\u0435\\u043D\\u044B \\u0430\\u043A\\u0446\\u0438\\u0439:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"stockTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0422\\u0438\\u043A\\u0435\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0426\\u0435\\u043D\\u0430 ($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: stocks.map(stock => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.companyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.ticker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.price.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleShowChart(stock),\n                children: \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, stock.ticker, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), selectedStock && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: !!selectedStock,\n      onRequestClose: handleCloseChart,\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439 \\u0434\\u043B\\u044F \", selectedStock.companyName, \" (\", selectedStock.ticker, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: dateHistory[selectedStock.ticker] || [],\n          datasets: [{\n            label: 'Цена ($)',\n            data: priceHistory[selectedStock.ticker] || [],\n            borderColor: 'rgba(75,192,192,1)',\n            borderWidth: 2,\n            fill: false\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: false,\n              suggestedMin: Math.min(...(priceHistory[selectedStock.ticker] || [0])) * 0.95,\n              suggestedMax: Math.max(...(priceHistory[selectedStock.ticker] || [0])) * 1.05\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Дата'\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseChart,\n        className: \"close-button\",\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(ExchangeSimulator, \"37jJP8WYlwxOSjzJczoiW9Hc+1o=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ExchangeSimulator;\nexport default ExchangeSimulator;\nvar _c;\n$RefreshReg$(_c, \"ExchangeSimulator\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","io","setStocks","setTradingStatus","setSpeed","Line","Modal","jsxDEV","_jsxDEV","socket","transports","setAppElement","ExchangeSimulator","_s","stocks","isTrading","speed","state","dispatch","selectedStock","setSelectedStock","priceHistory","setPriceHistory","dateHistory","setDateHistory","on","updatedStocks","prevHistory","updatedPriceHistory","updatedDateHistory","forEach","stock","ticker","push","price","lastDate","length","Date","slice","nextDate","setDate","getDate","toISOString","split","emit","off","startTrading","stopTrading","handleSpeedChange","e","Number","target","value","handleShowChart","handleCloseChart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","min","onChange","disabled","onClick","map","companyName","toFixed","isOpen","onRequestClose","overlayClassName","data","labels","datasets","label","borderColor","borderWidth","fill","options","responsive","maintainAspectRatio","scales","y","beginAtZero","suggestedMin","Math","suggestedMax","max","x","title","display","text","plugins","legend","position","_c","$RefreshReg$"],"sources":["/home/vladislav/WebstormProjects/stock_exchange/frontend/src/exchangeSimulator/ExchangeSimulator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport io from 'socket.io-client';\nimport { setStocks, setTradingStatus, setSpeed } from './stockSlice';\nimport { Line } from 'react-chartjs-2';\nimport Modal from 'react-modal';\nimport './ExchangeSimulator.css';\n\nconst socket = io('http://localhost:3001', {\n    transports: ['websocket'],\n});\n\nModal.setAppElement('#root');\n\nconst ExchangeSimulator = () => {\n    const { stocks, isTrading, speed } = useSelector((state) => state.stocks);\n    const dispatch = useDispatch();\n\n    const [selectedStock, setSelectedStock] = useState(null);\n    const [priceHistory, setPriceHistory] = useState({});\n    const [dateHistory, setDateHistory] = useState({}); // Хранение дат для акций\n\n    useEffect(() => {\n        socket.on('stockUpdate', (updatedStocks) => {\n            dispatch(setStocks(updatedStocks));\n\n            // Обновляем историю цен и дат для каждой акции\n            setPriceHistory((prevHistory) => {\n                const updatedPriceHistory = { ...prevHistory };\n                const updatedDateHistory = { ...dateHistory }; // Копируем существующую историю дат\n\n                updatedStocks.forEach((stock) => {\n                    if (!updatedPriceHistory[stock.ticker]) {\n                        updatedPriceHistory[stock.ticker] = []; // Инициализируем массив цен, если отсутствует\n                    }\n\n                    if (!updatedDateHistory[stock.ticker]) {\n                        updatedDateHistory[stock.ticker] = []; // Инициализируем массив дат, если отсутствует\n                    }\n\n                    // Добавляем новое значение цены\n                    updatedPriceHistory[stock.ticker].push(stock.price);\n\n                    // Добавляем дату (следующий день)\n                    const lastDate =\n                        updatedDateHistory[stock.ticker].length > 0\n                            ? new Date(updatedDateHistory[stock.ticker].slice(-1)[0])\n                            : new Date(); // Начинаем с сегодняшней даты\n\n                    const nextDate = new Date(lastDate);\n                    nextDate.setDate(nextDate.getDate() + 1); // Добавляем 1 день\n\n                    updatedDateHistory[stock.ticker].push(nextDate.toISOString().split('T')[0]);\n                });\n\n                setDateHistory(updatedDateHistory); // Обновляем историю дат\n                return updatedPriceHistory; // Возвращаем обновленную историю цен\n            });\n\n        });\n\n        socket.emit('loadPage');\n        socket.emit('getStocks');\n\n        return () => {\n            socket.off('stockUpdate');\n        };\n    }, [dispatch, dateHistory]);\n\n    const startTrading = () => {\n        dispatch(setTradingStatus(true));\n        socket.emit('startTrading', { speed });\n    };\n\n    const stopTrading = () => {\n        dispatch(setTradingStatus(false));\n        socket.emit('stopTrading');\n        setPriceHistory({});\n        setDateHistory({}); // Очистка дат при остановке торгов\n    };\n\n    const handleSpeedChange = (e) => {\n        dispatch(setSpeed(Number(e.target.value)));\n    };\n\n    const handleShowChart = (stock) => {\n        setSelectedStock(stock);\n    };\n\n    const handleCloseChart = () => {\n        setSelectedStock(null);\n    };\n\n    return (\n        <div className=\"content\">\n            <header className=\"header\">Биржевые торги</header>\n\n            <div className=\"settings\">\n                <label htmlFor=\"speed\">Скорость обновления (сек):</label>\n                <input\n                    id=\"speed\"\n                    type=\"number\"\n                    min=\"1\"\n                    value={speed}\n                    onChange={handleSpeedChange}\n                    disabled={isTrading}\n                />\n\n                <button onClick={startTrading} disabled={isTrading}>\n                    Начать торги\n                </button>\n                <button onClick={stopTrading} disabled={!isTrading}>\n                    Остановить торги\n                </button>\n            </div>\n\n            <div className=\"stock-prices\">\n                <h3>Текущие цены акций:</h3>\n                <table className=\"stockTable\">\n                    <thead>\n                    <tr>\n                        <th>Компания</th>\n                        <th>Тикер</th>\n                        <th>Цена ($)</th>\n                        <th>Действие</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {stocks.map((stock) => (\n                        <tr key={stock.ticker}>\n                            <td>{stock.companyName}</td>\n                            <td>{stock.ticker}</td>\n                            <td>{stock.price.toFixed(2)}</td>\n                            <td>\n                                <button onClick={() => handleShowChart(stock)}>График</button>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n\n            {selectedStock && (\n                <Modal\n                    isOpen={!!selectedStock}\n                    onRequestClose={handleCloseChart}\n                    className=\"modal-content\"\n                    overlayClassName=\"modal-overlay\"\n                >\n                    <h3>График изменений для {selectedStock.companyName} ({selectedStock.ticker})</h3>\n                    <Line\n                        data={{\n                            labels: dateHistory[selectedStock.ticker] || [],\n                            datasets: [\n                                {\n                                    label: 'Цена ($)',\n                                    data: priceHistory[selectedStock.ticker] || [],\n                                    borderColor: 'rgba(75,192,192,1)',\n                                    borderWidth: 2,\n                                    fill: false,\n                                },\n                            ],\n                        }}\n                        options={{\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            scales: {\n                                y: {\n                                    beginAtZero: false,\n                                    suggestedMin:\n                                        Math.min(...(priceHistory[selectedStock.ticker] || [0])) * 0.95,\n                                    suggestedMax:\n                                        Math.max(...(priceHistory[selectedStock.ticker] || [0])) * 1.05,\n                                },\n                                x: {\n                                    title: {\n                                        display: true,\n                                        text: 'Дата',\n                                    },\n                                },\n                            },\n                            plugins: {\n                                legend: {\n                                    display: true,\n                                    position: 'top',\n                                },\n                            },\n                        }}\n                    />\n                    <button onClick={handleCloseChart} className=\"close-button\">\n                        Закрыть\n                    </button>\n                </Modal>\n            )}\n        </div>\n    );\n};\n\nexport default ExchangeSimulator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}