{"ast":null,"code":"// redux/stocksSlice.js\n\nimport { createSlice } from '@reduxjs/toolkit';\n\n// Начальное состояние\nconst initialState = {\n  stocks: [],\n  isTrading: false,\n  speed: 1\n};\n\n// Слайс для управления акциями и состоянием торгов\nexport const stocksSlice = createSlice({\n  name: 'stocks',\n  initialState,\n  reducers: {\n    setStocks: (state, action) => {\n      state.stocks = action.payload;\n    },\n    updateStockPrices: state => {\n      state.stocks = state.stocks.map(stock => ({\n        ...stock,\n        price: +(stock.price * (1 + (Math.random() * 2 - 1) * 0.01)).toFixed(2)\n      }));\n    },\n    setTradingStatus: (state, action) => {\n      state.isTrading = action.payload;\n    },\n    setSpeed: (state, action) => {\n      state.speed = action.payload;\n    }\n  }\n});\n\n// Экспортируем actions\nexport const {\n  setStocks,\n  updateStockPrices,\n  setTradingStatus,\n  setSpeed\n} = stocksSlice.actions;\n\n// Экспортируем редьюсер\nexport default stocksSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","stocks","isTrading","speed","stocksSlice","name","reducers","setStocks","state","action","payload","updateStockPrices","map","stock","price","Math","random","toFixed","setTradingStatus","setSpeed","actions","reducer"],"sources":["/home/vladislav/WebstormProjects/stock_exchange/frontend/src/exchangeSimulator/stockSlice.js"],"sourcesContent":["// redux/stocksSlice.js\n\nimport { createSlice } from '@reduxjs/toolkit';\n\n// Начальное состояние\nconst initialState = {\n    stocks: [],\n    isTrading: false,\n    speed: 1\n};\n\n// Слайс для управления акциями и состоянием торгов\nexport const stocksSlice = createSlice({\n    name: 'stocks',\n    initialState,\n    reducers: {\n        setStocks: (state, action) => {\n            state.stocks = action.payload;\n        },\n        updateStockPrices: (state) => {\n            state.stocks = state.stocks.map(stock => ({\n                ...stock,\n                price: +(stock.price * (1 + (Math.random() * 2 - 1) * 0.01)).toFixed(2)\n            }));\n        },\n        setTradingStatus: (state, action) => {\n            state.isTrading = action.payload;\n        },\n        setSpeed: (state, action) => {\n            state.speed = action.payload;\n        }\n    }\n});\n\n// Экспортируем actions\nexport const { setStocks, updateStockPrices, setTradingStatus, setSpeed } = stocksSlice.actions;\n\n// Экспортируем редьюсер\nexport default stocksSlice.reducer;\n"],"mappings":"AAAA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,QAAQ;EACdL,YAAY;EACZM,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,iBAAiB,EAAGH,KAAK,IAAK;MAC1BA,KAAK,CAACP,MAAM,GAAGO,KAAK,CAACP,MAAM,CAACW,GAAG,CAACC,KAAK,KAAK;QACtC,GAAGA,KAAK;QACRC,KAAK,EAAE,CAAC,CAACD,KAAK,CAACC,KAAK,IAAI,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,EAAEC,OAAO,CAAC,CAAC;MAC1E,CAAC,CAAC,CAAC;IACP,CAAC;IACDC,gBAAgB,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO;IACpC,CAAC;IACDS,QAAQ,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAChC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEH,SAAS;EAAEI,iBAAiB;EAAEO,gBAAgB;EAAEC;AAAS,CAAC,GAAGf,WAAW,CAACgB,OAAO;;AAE/F;AACA,eAAehB,WAAW,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}